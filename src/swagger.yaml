swagger: '2.0'
info:
  version: 1.0.0
  title: MeetupController API
  description: MeetupController RESTful API
basePath: /
consumes:
  - application/json
produces:
  - application/json
schemes:
  - http
  - https
definitions:
  Meetup:
    type: object
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      description:
        type: string
      tags:
        type: array
        items:
          type: string
      timestamp:
        type: string
        format: date-time
    required:
      - name
      - timestamp
  User:
    type: object
    properties:
      id:
        type: integer
      email:
        type: string
      username:
        type: string
      role:
        type: string
  UserInfo:
    type: object
    properties:
      id:
        type: integer
      accessToken:
        type: string
      refreshToken:
        type: string
  Error:
    type: object
    properties:
      err:
        type: boolean
      result:
        type: string
      status:
        type: integer

paths:
  /meetups:
    get:
      summary: Get all meetups
      description: Get all meetups
      tags: [Meetups]
      produces:
        - application/json
      parameters:
        - in: query
          name: page
          description: Page number to retrieve
          type: string
        - in: query
          name: offset
          description: Number of items to retrieve per page
          type: string
        - in: query
          name: name
          description: Name of the meetup to search for
          type: string
        - in: query
          name: tags
          description: Comma-separated list of tags to filter by
          type: string
        - in: query
          name: from
          description: Lower bound of the date range to filter by, in ISO 8601 format (e.g. 2023-04-18T15:25:00.000Z)
          type: string
        - in: query
          name: to
          description: Upper bound of the date range to filter by, in ISO 8601 format (e.g. 2023-04-18T15:25:00.000Z)
          type: string
      responses:
        '200':
          description: Returns an array of all meetups that match the specified filters
          schema:
            type: array
            items:
              $ref: '#/definitions/Meetup'
        '400':
          description: Invalid query parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '404':
          description: No meetups found
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '500':
          description: Internal server error
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'

    post:
      summary: Create a new meetup
      description: Create a new meetup
      tags: [Meetups]
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Meetup object that needs to be created
          schema:
            $ref: '#/definitions/Meetup'
      responses:
        '201':
          description: Returns the newly created meetup object
          schema:
            $ref: '#/definitions/Meetup'
        '400':
          description: Invalid request body
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '500':
          description: Server error
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'

  /meetups/{id}:
    get:
      summary: Get a single meetup by ID
      description: Get a single meetup by ID
      tags: [Meetups]
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of the meetup to retrieve
          required: true
          type: string
      responses:
        '200':
          description: Returns the meetup object with the specified ID
          schema:
            $ref: '#/definitions/Meetup'
        '404':
          description: Meetup not found
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '500':
          description: Internal server error
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'

    patch:
      description: Update a single meetup by
      summary: Update a single meetup by
      tags: [Meetups]
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of the meetup to update
          required: true
          type: string
        - in: body
          name: body
          description: Meetup object that needs to be updated
          schema:
            $ref: '#/definitions/Meetup'
      responses:
        '200':
          description: Returns the updated meetup object
          schema:
            $ref: '#/definitions/Meetup'
        '400':
          description: Invalid request body
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '404':
          description: Meetup not found
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '500':
          description: Internal server error
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'

    delete:
      summary: Delete a meetup by ID
      tags: [Meetups]
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the meetup to delete
      responses:
        '200':
          description: Meetup successfully deleted
          schema:
            $ref: '#/definitions/Meetup'
        '404':
          description: Meetup not found
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '500':
          description: Internal server error
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'

  /api/registration:
    post:
      summary: User registration endpoint
      tags: [UserLogin]
      consumes:
        - application/json
      parameters:
        - in: body
          name: user
          schema:
            type: object
            properties:
              email:
                type: string
              username:
                type: string
              password:
                type: string
              role:
                type: string
          required:
            - email
            - username
            - password
            - role
      responses:
        '200':
          description: User registration successful
        '400':
          description: Invalid request body
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '500':
          description: Internal server error
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'

  /api/login:
    post:
      summary: User login endpoint
      tags: [UserLogin]
      consumes:
        - application/json
      parameters:
        - in: body
          name: user
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
          required:
            - email
            - password
      responses:
        '200':
          description: User login successful
          schema:
            $ref: '#/definitions/UserInfo'
        '400':
          description: Invalid request body
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '401':
          description: Invalid credentials
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '500':
          description: Internal server error
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'

  /api/refresh:
    post:
      summary: User token refresh endpoint
      tags: [UserLogin]
      responses:
        '200':
          description: Token refresh successful
          schema:
            $ref: '#/definitions/UserInfo'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '500':
          description: Internal server error
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
